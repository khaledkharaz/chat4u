/* Import a professional font */
/* Added in index.html head:
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
*/

/* CSS Variables for a Professional Palette - Version 4 (Refined) */
:root {
    /* Core Colors */
    --primary-brand: #007BFF; /* A standard, clear blue */
    --primary-darker: #0056b3; /* Darker shade for hover */
    --accent-action: #28A745; /* A success green for positive actions like send */
    --accent-action-darker: #218838; /* Darker green for hover */
    --accent-secondary: #6C757D; /* Muted gray for secondary actions/icons */
    --accent-secondary-darker: #5A6268; /* Darker muted gray for hover */


    /* Grayscale & Surface */
    --background: #F8F9FA; /* Very light background */
    --surface: #FFFFFF; /* White for containers/cards */
    --surface-elevated: #E9ECEF; /* Slightly darker for hover/active states on light surfaces */
    --text-primary: #212529; /* Dark text */
    --text-secondary: #6C757D; /* Muted text */
    --text-placeholder: #ADB5BD; /* Placeholder text color */
    --border-light: #DEE2E6; /* Light border */
    --border-medium: #CED4DA; /* Medium border */
    --disabled-bg: #E9ECEF; /* Light disabled background */
    --disabled-text: #ADB5BD; /* Light disabled text */
    --shadow-subtle: rgba(0, 0, 0, 0.08);
    --shadow-hover: rgba(0, 0, 0, 0.15);


    /* Element Backgrounds */
    --input-bg: #FFFFFF; /* White input background */
    --bot-message-bg: #E9ECEF; /* Light grey bot message background */
    --user-message-bg: var(--primary-brand); /* User messages use primary brand color */
    --button-text-light: #FFFFFF; /* White text on colored buttons */

     /* Tag Colors (for persona cards) */
     --tag-bg: #E9ECEF;
     --tag-text: #495057;

     /* Error Color */
     --color-error: #DC3545;
}

/* Dark Mode Variables - Version 4 (Refined) */
body.dark-mode {
    /* Core Colors */
    --primary-brand: #007BFF; /* Primary stays the same */
    --primary-darker: #0056b3; /* Primary hover stays the same */
    --accent-action: #28A745; /* Accent stays the same for clarity */
    --accent-action-darker: #218838; /* Accent hover stays the same */
    --accent-secondary: #CED4DA; /* Lighter gray for secondary actions/icons */
    --accent-secondary-darker: #ADB5BD; /* Even lighter gray for hover */


    /* Grayscale & Surface */
    --background: #212529; /* Dark background */
    --surface: #343A40; /* Dark grey for containers */
    --surface-elevated: #495057; /* Slightly lighter for hover/active states on dark surfaces */
    --text-primary: #F8F9FA; /* Lightest text */
    --text-secondary: #CED4DA; /* Medium light text */
    --text-placeholder: #ADB5BD; /* Placeholder text color */
    --border-light: #495057; /* Dark border */
    --border-medium: #6C757D; /* Medium dark border */
    --disabled-bg: #495057; /* Dark disabled background */
    --disabled-text: #6C757D; /* Dark disabled text */
    --shadow-subtle: rgba(0, 0, 0, 0.3);
    --shadow-hover: rgba(0, 0, 0, 0.5);


    /* Element Backgrounds */
    --input-bg: #343A40; /* Dark input background */
    --bot-message-bg: #495057; /* Dark grey bot message background */
    --user-message-bg: var(--primary-brand); /* User messages still use primary brand color */
    --button-text-light: #FFFFFF; /* Text on primary/accent buttons remains white for contrast */

    /* Tag Colors (for persona cards) */
     --tag-bg: #495057;
     --tag-text: #CED4DA;

     /* Error Color */
     --color-error: #DC3545; /* Error color is generally the same or similar */
}


body {
    font-family: 'Roboto', sans-serif;
    display: flex;
    flex-direction: column;
    /* Changed justify/align to allow absolute positioning and centering lock screen */
    /* justify-content: flex-start; */
    /* align-items: center; */
    min-height: 100vh;
    background-color: var(--background);
    color: var(--text-primary);
    margin: 0;
    padding: 20px;
    box-sizing: border-box;
    transition: background-color 0.3s ease, color 0.3s ease;
    line-height: 1.6;
    overflow-y: auto; /* Ensure body is scrollable if content exceeds height */
}

/* --- Header Toggle Buttons --- */
/* Style for the mode toggle button (base style) */
.mode-toggle {
    /* Position it absolutely for more precise placement */
    position: absolute;
    top: 20px;
    /* right position will be set individually */

    padding: 8px; /* Icon button style */
    background-color: transparent; /* No background */
    color: var(--accent-secondary); /* Use accent secondary color for icon */
    border: 1px solid var(--border-light); /* Subtle border */
    border-radius: 5px; /* Slight roundness */
    cursor: pointer;
    font-size: 0.9em; /* Smaller font if text fallback */
    font-weight: 500;
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
    display: flex; /* Align icon */
    align-items: center;
    justify-content: center;
    width: 36px; /* Fixed size */
    height: 36px;
     z-index: 10; /* Ensure it's above other content */
     outline-offset: 2px; /* Space for focus outline */
}

.mode-toggle .mode-icon {
    width: 20px;
    height: 20px;
}

.mode-toggle:hover:not(:disabled),
.mode-toggle:focus:not(:disabled) { /* Add focus state */
    background-color: rgba(0, 0, 0, 0.05); /* Subtle hover background */
    border-color: var(--border-medium); /* Slightly darker border on hover */
    color: var(--primary-brand); /* Highlight icon on hover */
    outline: none; /* Remove default focus outline */
}
body.dark-mode .mode-toggle:hover:not(:disabled),
body.dark-mode .mode-toggle:focus:not(:disabled) {
    background-color: rgba(255, 255, 255, 0.1); /* Subtle hover background */
    color: var(--primary-brand); /* Highlight icon on hover */
}

/* Position specific toggle buttons */
#dark-mode-toggle {
    right: 20px;
}

/*
   Position the reveal password button (replaces old unlock-toggle)
   Use the same position as the old unlock-toggle.
*/
#reveal-password-button {
    /* right: 70px; */
}

/* Position the lock app toggle */
#lock-app-button {
    right: 70px; /* Same position as reveal button */
}

/*
  Control visibility of reveal/lock toggles based on body.locked class.
  Updated to target #reveal-password-button instead of #unlock-toggle.
*/
body.locked #reveal-password-button {
    display: flex; /* Show reveal button when locked */
}
body:not(.locked) #reveal-password-button {
    display: none; /* Hide reveal button when unlocked */
}

body.locked #lock-app-button {
    display: none; /* Hide lock app button when locked */
}
body:not(.locked) #lock-app-button {
    display: flex; /* Show lock app button when unlocked */
}


/* --- Lock Screen --- */
#lock-screen {
    display: flex; /* Use flex to center content */
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: fixed; /* Cover the entire viewport */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--background); /* Use background variable */
    color: var(--text-primary); /* Use text variable */
    z-index: 5; /* Below toggles, above main content */
    transition: opacity 0.3s ease; /* Smooth transition */
    padding: 20px; /* Add padding for mobile */
    box-sizing: border-box;
}

/* Style for the content within the lock screen */
#lock-screen .lock-content {
     text-align: center;
     background-color: var(--surface); /* Add surface background */
     padding: 40px;
     border-radius: 12px;
     box-shadow: 0 8px 20px var(--shadow-subtle);
     border: 1px solid var(--border-light);
     max-width: 90%; /* Prevent overflow on small screens */
     width: 400px;
     box-sizing: border-box;
}

#lock-screen h2 {
     margin-top: 0;
     margin-bottom: 10px;
     font-size: 2em;
     font-weight: 700;
     color: var(--text-primary);
}
#lock-screen p {
    margin-bottom: 20px;
    color: var(--text-secondary);
}

/* Style for the unlock input section (initially hidden) */
#unlock-section {
    display: flex; /* Arrange input and button horizontally */
    flex-direction: column; /* Stack vertically on small screens by default */
    gap: 10px; /* Space between input and button */
    justify-content: center;
    align-items: center;
    margin-top: 20px; /* Space above section */
    width: 100%; /* Take full width of lock-content */
}

#unlock-section input[type="password"] {
    padding: 12px 15px;
    border: 1px solid var(--border-medium);
    border-radius: 8px;
    font-size: 1em;
    background-color: var(--input-bg);
    color: var(--text-primary);
    width: 100%; /* Fill width of unlock-section */
    box-sizing: border-box; /* Include padding and border in element's total width */
    transition: border-color 0.2s ease, background-color 0.2s ease, color 0.2s ease;
    outline-offset: 2px;
}
#unlock-section input[type="password"]::placeholder {
     color: var(--text-placeholder);
     opacity: 1;
}
#unlock-section input[type="password"]:focus {
    border-color: var(--primary-brand);
    outline: none;
}

#unlock-section button {
    padding: 12px 20px;
    background-color: var(--primary-brand);
    color: var(--button-text-light);
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1em;
    font-weight: 500;
    transition: background-color 0.2s ease, opacity 0.2s ease;
    width: 100%; /* Make button full width on small screens */
    max-width: 200px; /* Limit max width on larger screens */
     outline-offset: 2px;
}
#unlock-section button:hover:not(:disabled) {
     background-color: var(--primary-darker);
}
#unlock-section button:disabled {
     background-color: var(--disabled-bg);
     color: var(--disabled-text);
     cursor: not-allowed;
     opacity: 0.6;
}
#unlock-section button:focus:not(:disabled) {
    outline: none;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
}
body.dark-mode #unlock-section button:focus:not(:disabled) {
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.7);
}


/* Style for error message */
#unlock-error-message {
    color: var(--color-error);
    margin-top: 10px;
    font-size: 0.9em;
    text-align: center;
    width: 100%;
    font-weight: 500;
}


/* --- Main App Content --- */
#main-app-content {
    /* This div wraps the original .container */
    /* Its visibility is controlled by body.locked via CSS display property */
    width: 100%; /* Take full width */
    max-width: 650px; /* Match container max-width */
    margin-top: 60px; /* Space from top, considering toggles */
    /* The container inside already has styling */
    display: flex; /* Default display, will be overridden by body.locked */
    flex-direction: column; /* Ensure its contents stack correctly */
    flex-grow: 1; /* Allow main content to take space if body is flex column */
}

/* Control visibility based on .locked class on body */
body.locked #main-app-content {
    display: none;
}
body:not(.locked) #lock-screen {
    display: none;
}


/* --- Container (The existing main content wrapper) --- */
/* This remains largely the same */
.container {
    background-color: var(--surface);
    border-radius: 12px;
    box-shadow: 0 8px 20px var(--shadow-subtle);
    width: 100%;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-height: 80vh; /* Minimum height to look good */
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid var(--border-light);
    /* margin-top: 60px; <-- REMOVED - margin is now on #main-app-content */
    position: relative; /* Needed for absolute positioning within (like views) */
     flex-grow: 1; /* Allow container to take space within main-app-content */
}

body.dark-mode .container {
    box-shadow: 0 8px 20px var(--shadow-subtle);
}


/* --- View Transitions --- */
/* Initial state for views (inside .container) */
.view {
    width: 100%;
    /* opacity: 1; REMOVED - control via .hidden class */
    /* transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out; REMOVED - relying on display: none */
    position: absolute; /* Use absolute positioning for stacking */
    top: 0;
    left: 0;
    height: 100%; /* Take full height of container */
    overflow-y: auto; /* Allow scrolling within view */
    display: flex;
    flex-direction: column;
    /* The specific transform/opacity for transitions will be applied by JS or another class if needed later */
}

/* The .hidden utility class will now strictly use display: none */
.hidden {
    display: none !important;
}
/*
   Note: The previous .view.hidden rules for transitions (opacity, transform)
   might conflict with the lock/unlock system relying on display: none.
   If you re-introduce smooth transitions *between views within* main-app-content,
   you'll need JS to manage adding/removing display: none *after* the opacity/transform transition finishes.
   For this step, the priority is getting the lock/unlock and filter styles working.
*/

/* Adjustments for chat view to handle layout */
#chat-container.view {
     justify-content: space-between; /* Distribute space */
     /* transform: translateX(-100%); REMOVED - relies on transition system */
}
/* #chat-container.view:not(.hidden) { transform: translateX(0); } REMOVED */
/* #persona-selection.view:not(.hidden) { transform: translateX(0); } REMOVED */
/* #persona-selection.view.hidden { transform: translateX(100%); } REMOVED */


/* --- Persona Selection View --- */
#persona-selection {
    padding: 40px;
    text-align: center;
    flex-grow: 1; /* Allow it to take up available space */
    display: flex; /* Use flex for inner layout */
    flex-direction: column;
    align-items: center;
     overflow-y: auto; /* Enable scrolling within the view */
}

#persona-selection h2 {
    color: var(--text-primary);
    margin-bottom: 20px;
    font-size: 1.8em;
    font-weight: 700;
    transition: color 0.3s ease;
    width: 100%;
}


/* --- Persona Filters (MODIFIED for Checkboxes) --- */
#persona-filters {
     margin-bottom: 20px;
     width: 100%;
     max-width: 600px;
}
#persona-filters > label { /* Style for the 'Filter by:' text */
     display: block;
     text-align: left;
     margin-bottom: 8px;
     font-weight: 500;
     color: var(--text-secondary);
}
#persona-filters .filter-options {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: 10px;
     font-size: 0.95em;
}

#persona-filters input[type="checkbox"] {
    display: none; /* Hide actual checkboxes */
}

/* Style for checkbox labels */
#persona-filters label {
     cursor: pointer;
     padding: 8px 15px;
     border: 1px solid var(--border-medium);
     border-radius: 20px;
     transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
     font-weight: 400;
     white-space: nowrap; /* Prevent labels from breaking */
     background-color: transparent; /* Default background */
     color: var(--text-secondary); /* Default text color */
     position: relative;
}

/* Style for CHECKED checkbox labels */
#persona-filters input[type="checkbox"]:checked + label {
    background-color: var(--primary-brand);
    color: var(--button-text-light);
    border-color: var(--primary-brand);
    font-weight: 500;
}

/* Dark mode adjustments for filters */
body.dark-mode #persona-filters label {
    border-color: var(--border-medium);
    color: var(--text-secondary);
}

body.dark-mode #persona-filters input[type="checkbox"]:checked + label {
     background-color: var(--primary-darker);
     border-color: var(--primary-darker);
}


/* --- Search Area --- */
.search-area {
    margin-bottom: 20px;
     width: 100%;
     max-width: 600px;
}
#persona-search {
    padding: 12px 15px;
    border: 1px solid var(--border-medium);
    border-radius: 8px;
    font-size: 1em;
    width: 100%;
    box-sizing: border-box;
    background-color: var(--input-bg);
    color: var(--text-primary);
    transition: border-color 0.2s ease, background-color 0.2s ease, color 0.2s ease;
    outline-offset: 2px;
}
#persona-search::placeholder {
    color: var(--text-placeholder);
    opacity: 1;
}
#persona-search:focus {
    border-color: var(--primary-brand);
    outline: none;
}


/* --- Persona Grid --- */
#persona-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    gap: 20px;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    padding-top: 0px;
     padding-bottom: 40px;
}

/* --- Persona Cards --- */
.persona-card {
    background-color: var(--surface);
    border: 1px solid var(--border-light);
    border-radius: 10px;
    padding: 20px;
    text-align: center;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease, border-color 0.2s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100px;
    color: var(--text-primary);
    font-family: 'Roboto', sans-serif;
    -webkit-tap-highlight-color: transparent;
     outline-offset: 2px;
}

.persona-card:hover:not(:disabled),
.persona-card:focus:not(:disabled) {
    transform: translateY(-5px);
    box-shadow: 0 10px 15px var(--shadow-hover);
    border-color: var(--primary-brand);
     outline: none;
}

body.dark-mode .persona-card:hover:not(:disabled),
body.dark-mode .persona-card:focus:not(:disabled) {
     box-shadow: 0 10px 15px var(--shadow-hover);
     border-color: var(--primary-brand);
}

.persona-card:active:not(:disabled) {
     transform: translateY(-2px);
     box-shadow: 0 5px 10px var(--shadow-subtle);
}

.persona-card h3 {
    margin-top: 0;
    margin-bottom: 8px;
    font-size: 1.1em;
    font-weight: 700;
    color: var(--text-primary);
    word-break: break-word;
}

.persona-tags {
    font-size: 0.75em;
    color: var(--text-secondary);
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 5px;
    margin-top: 5px;
}

.persona-tags .tag {
    background-color: var(--tag-bg);
    padding: 3px 8px;
    border-radius: 12px;
    color: var(--tag-text);
     font-weight: 500;
}

/* Style for the empty grid message */
.empty-grid-message {
    text-align: center;
    color: var(--text-secondary);
    font-style: italic;
    grid-column: 1 / -1;
    padding: 40px 0;
}


/* --- Chat Container & Header --- */
#chat-container {
     padding-top: 15px;
}

#chat-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 20px;
    background-color: var(--surface);
    border-bottom: 1px solid var(--border-light);
    font-weight: 700;
    color: var(--text-primary);
    transition: background-color 0.3s ease, border-bottom-color 0.3s ease, color 0.3s ease;
    font-size: 1.1em;
    flex-shrink: 0;
     border-top-left-radius: 12px;
     border-top-right-radius: 12px;
}

#chat-header span#current-persona {
    flex-grow: 1;
    text-align: center;
    margin: 0 10px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-weight: 700;
}

#chat-header button {
    background: none;
    border: none;
    color: var(--accent-secondary);
    cursor: pointer;
    font-size: 0.9em;
    padding: 8px;
    border-radius: 5px;
    transition: color 0.2s ease, background-color 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    width: 36px;
    height: 36px;
     outline-offset: 2px;
}
#chat-header button svg {
     width: 20px;
     height: 20px;
}

#chat-header button:hover:not(:disabled),
#chat-header button:focus:not(:disabled) {
    color: var(--primary-brand);
     background-color: rgba(0, 0, 0, 0.05);
     outline: none;
}
body.dark-mode #chat-header button:hover:not(:disabled),
body.dark-mode #chat-header button:focus:not(:disabled) {
     background-color: rgba(255, 255, 255, 0.1);
     color: var(--primary-brand);
}


/* --- Chatbox (Messages Area) --- */
#chatbox {
    flex-grow: 1;
    overflow-y: auto;
    padding: 20px;
    display: flex;
    flex-direction: column;
    background-color: var(--surface);
    transition: background-color 0.3s ease;
     /* min-height: 0; */
}

.message {
    margin-bottom: 12px;
    padding: 12px 18px;
    border-radius: 20px;
    max-width: 85%;
    word-wrap: break-word;
    line-height: 1.5;
    font-size: 1em;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
}

.user-message {
    align-self: flex-end;
    background-color: var(--user-message-bg);
    color: var(--button-text-light);
    border-bottom-right-radius: 8px;
    margin-right: 0;
    margin-left: 10px;
}

.bot-message {
    align-self: flex-start;
    background-color: var(--bot-message-bg);
    color: var(--text-primary);
    border-bottom-left-radius: 8px;
    transition: background-color 0.3s ease, color 0.3s ease;
    margin-left: 0;
    margin-right: 10px;
}

/* Style for the initial instruction message */
.message.bot-message.initial-message {
    margin-top: auto;
    margin-bottom: 20px;
    align-self: center;
    text-align: center;
    font-style: italic;
    color: var(--text-secondary);
    background-color: transparent;
    padding: 0;
    border-radius: 0;
    font-size: 0.9em;
     box-shadow: none;
}


/* --- Input Area --- */
#input-area {
    display: flex;
    padding: 15px 20px;
    border-top: 1px solid var(--border-light);
    background-color: var(--surface);
    gap: 10px;
    transition: background-color 0.3s ease, border-top-color 0.3s ease;
    flex-shrink: 0;
     border-bottom-left-radius: 12px;
     border-bottom-right-radius: 12px;
}

#user-input {
    flex-grow: 1;
    padding: 12px 15px;
    border: 1px solid var(--border-medium);
    border-radius: 8px;
    font-size: 1em;
    box-sizing: border-box;
    background-color: var(--input-bg);
    color: var(--text-primary);
    transition: border-color 0.2s ease, background-color 0.2s ease, color 0.2s ease;
     outline-offset: 2px;
}

#user-input::placeholder {
    color: var(--text-placeholder);
    opacity: 1;
}
#user-input:focus {
     border-color: var(--primary-brand);
     outline: none;
}


#send-button {
    padding: 10px 20px;
    background-color: var(--accent-action);
    color: var(--button-text-light);
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1em;
    font-weight: 500;
    transition: background-color 0.2s ease, opacity 0.2s ease;
     outline-offset: 2px;
}

#send-button:hover:not(:disabled) {
     background-color: var(--accent-action-darker);
     opacity: 1;
}
#send-button:disabled {
    background-color: var(--disabled-bg);
    color: var(--disabled-text);
    cursor: not-allowed;
    opacity: 0.6;
}
#send-button:focus:not(:disabled) {
     outline: none;
     box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.5);
}
body.dark-mode #send-button:focus:not(:disabled) {
     box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.7);
}


/* --- Utility/Helper Classes --- */
/* Utility class for hiding elements */
.hidden {
    display: none !important;
}

/* CSS for Typing Indicator Dots */
@keyframes blink {
  0% { opacity: .2; }
  20% { opacity: 1; }
  100% { opacity: .2; }
}

.message.bot-message.typing {
    background-color: var(--bot-message-bg);
     color: var(--text-primary);
     font-size: 1.2em;
     width: auto;
     padding: 10px 15px;
     border-bottom-left-radius: 8px;
     box-shadow: none;
     display: inline-block;
}

.message.bot-message.typing .dot {
  animation: blink 1.4s infinite;
  animation-fill-mode: both;
   color: var(--text-primary);
}

.message.bot-message.typing .dot:nth-child(2) {
  animation-delay: .2s;
}

.message.bot-message.typing .dot:nth-child(3) {
  animation-delay: .4s;
}

/* Visually hidden class for ARIA status messages */
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* --- Responsive adjustments --- */
@media (max-width: 600px) {
    body {
        padding: 0;
        align-items: stretch;
         overflow-y: auto;
    }
     .mode-toggle {
         top: 10px;
         width: 30px;
         height: 30px;
         padding: 6px;
     }
    #dark-mode-toggle {
        right: 10px;
    }
     #reveal-password-button,
     #lock-app-button {
         right: 50px;
     }
     .mode-toggle .mode-icon {
          width: 16px;
          height: 16px;
     }

    /* Lock Screen Adjustments */
     #lock-screen .lock-content {
         padding: 20px;
         width: 100%;
         max-width: none;
     }
     #lock-screen h2 {
         font-size: 1.5em;
         margin-bottom: 10px;
     }
     #lock-screen p {
          margin-bottom: 15px;
     }
      #unlock-section {
         flex-direction: column;
         gap: 10px;
      }
      #unlock-section input[type="password"] {
          max-width: none;
      }
     #unlock-section button {
         width: 100%;
         max-width: none;
     }
     #unlock-error-message {
          margin-top: 8px;
     }


     #main-app-content {
         margin-top: 50px;
          padding: 0;
          align-items: stretch;
     }
     .container {
         border-radius: 0;
         box-shadow: none;
         border: none;
         min-height: 100vh;
         margin-top: 0;
     }


    .view {
        padding: 20px 15px;
    }

    #persona-selection {
        padding: 20px 15px;
    }
     #persona-selection h2 {
         font-size: 1.5em;
         margin-bottom: 15px;
     }
    #persona-filters {
         margin-bottom: 15px;
    }
      #persona-filters .filter-options {
          gap: 8px;
          justify-content: center;
      }
    .search-area {
         margin-bottom: 15px;
    }

     #persona-grid {
         grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
         gap: 15px;
          padding-bottom: 20px;
     }
     .persona-card {
         padding: 15px;
         min-height: 90px;
     }
      .persona-card h3 {
         font-size: 1em;
      }
     .persona-tags {
         font-size: 0.7em;
     }


     #chat-header {
         padding: 10px 15px;
         font-size: 1em;
     }
     #chat-header button {
         padding: 6px;
         width: 30px;
         height: 30px;
     }
     #chat-header button svg {
          width: 16px;
          height: 16px;
     }

     #chatbox {
         padding: 15px;
         padding-bottom: 10px;
     }
     .message {
         max-width: 95%;
         margin-bottom: 10px;
         padding: 10px 15px;
         font-size: 0.95em;
     }
     .message.bot-message.initial-message {
          margin-bottom: 15px;
     }


     #input-area {
        padding: 10px 15px;
         gap: 8px;
     }
     #user-input {
         padding: 10px 12px;
         font-size: 0.95em;
     }
    #send-button {
        padding: 8px 15px;
         font-size: 0.95em;
    }
}