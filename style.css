/* =========================================
   Wegi App Restyle - Professional & Clean
   Generated by AI as Senior UX/UI Developer
   ========================================= */

/* Import a professional font (Already in your HTML head) */
/* link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" */


/* --- CSS Variables for a Modern Professional Palette --- */
:root {
    /* Primary Brand Colors */
    --primary-brand: #007BFF;       /* A standard, clear blue */
    --primary-darker: #0056b3;      /* Darker shade for hover/active */
    --primary-light: #e6f3ff;       /* Very light tint for backgrounds/accents */

    /* Accent & Action Colors */
    --accent-action: #28A745;       /* Success green for positive actions (Send) */
    --accent-action-darker: #218838;/* Darker green for hover */
    --accent-secondary: #6C757D;    /* Muted gray for secondary icons/text */
    --accent-secondary-darker: #5A6268; /* Darker muted gray for hover */

    /* Grayscale & Surface Colors */
    --background: #F8F9FA;          /* Very light overall background */
    --surface: #FFFFFF;             /* White for main containers/cards */
    --surface-elevated: #E9ECEF;    /* Slightly darker for hovered surfaces */
    --surface-subtle: #F8F9FA;      /* Even lighter, almost background */


    /* Text Colors */
    --text-primary: #212529;        /* Dark text for main content */
    --text-secondary: #6C757D;      /* Muted text for labels, captions, less important info */
    --text-placeholder: #ADB5BD;    /* Placeholder text */
    --text-on-color: #FFFFFF;       /* White text on primary/accent backgrounds */

    /* Border Colors */
    --border-light: #DEE2E6;        /* Light separator/border */
    --border-medium: #CED4DA;       /* Medium border for inputs/cards */

    /* State Colors */
    --disabled-bg: #E9ECEF;         /* Light disabled background */
    --disabled-text: #ADB5BD;       /* Light disabled text */
    --color-error: #DC3545;         /* Error messages */
    --color-warning: #FFC107;       /* Warning messages */
    --color-success: #28A745;       /* Success indicators (maybe not used, but good to have) */


    /* Shadow Effects */
    --shadow-subtle: 0 4px 8px rgba(0, 0, 0, 0.08); /* Subtle shadow for lift */
    --shadow-medium: 0 8px 16px rgba(0, 0, 0, 0.12); /* Medium shadow for hover/active */


    /* Component Specific */
    --input-bg: var(--surface);     /* Inputs use surface color */
    --bot-message-bg: var(--surface-elevated); /* Light gray bot message */
    --user-message-bg: var(--primary-brand);   /* Primary color user message */

    /* Tag Colors (for persona cards filters) */
     --tag-bg: var(--surface-elevated); /* Light background for tags */
     --tag-text: var(--text-secondary); /* Muted text for tags */
     --tag-border: var(--border-light); /* Light border for tags */
     --tag-checked-bg: var(--primary-brand); /* Primary color for checked tags */
     --tag-checked-text: var(--text-on-color); /* White text for checked tags */
     --tag-checked-border: var(--primary-brand); /* Primary color border for checked tags */


    /* Spacing Scale (use multiples of 8px) */
     --space-xs: 4px;
     --space-sm: 8px;
     --space-md: 16px;
     --space-lg: 24px;
     --space-xl: 32px;
     --space-xxl: 40px;
}

/* --- Dark Mode Variables --- */
body.dark-mode {
    /* Primary Brand Colors (Can be slightly adjusted for dark mode) */
    --primary-brand: #30587d;       /* Slightly lighter blue for contrast */
    --primary-darker: #131f2b;      /* Original primary as darker shade */
     --primary-light: rgba(30, 53, 76, 0.2); /* Semi-transparent tint */


    /* Accent & Action Colors (Often kept similar but adjusted slightly) */
    --accent-action: #17251b;       /* Success green */
    --accent-action-darker: #071d0c;/* Darker green */
    --accent-secondary: #ADB5BD;    /* Lighter gray for secondary icons/text */
    --accent-secondary-darker: #CED4DA;/* Even lighter for hover */


    /* Grayscale & Surface Colors */
    --background: #181818;          /* Dark overall background */
    --surface: #282828;             /* Dark grey for main containers/cards */
    --surface-elevated: #383838;    /* Slightly lighter for hovered surfaces */
    --surface-subtle: #212121;      /* Slightly darker than surface */


    /* Text Colors */
    --text-primary: #E0E0E0;        /* Light grey text */
    --text-secondary: #A0A0A0;      /* Muted light grey text */
    --text-placeholder: #6A6A6A;    /* Darker grey placeholder */
    --text-on-color: #FFFFFF;       /* White text on primary/accent */

    /* Border Colors */
    --border-light: #404040;        /* Dark border */
    --border-medium: #606060;       /* Medium dark border */


    /* State Colors */
    --disabled-bg: #383838;         /* Dark disabled background */
    --disabled-text: #606060;       /* Dark disabled text */
    --color-error: #CF6679;         /* Adjusted error color for dark mode */


    /* Shadow Effects (Less pronounced in dark mode, often achieved with borders/surface changes) */
    --shadow-subtle: 0 4px 8px rgba(0, 0, 0, 0.3);
    --shadow-medium: 0 8px 16px rgba(0, 0, 0, 0.4);


    /* Component Specific */
    --input-bg: var(--surface-subtle);/* Inputs use slightly darker surface */
    --bot-message-bg: var(--surface-elevated); /* Lighter grey bot message */
    --user-message-bg: var(--primary-darker);   /* Darker primary user message */

    /* Tag Colors */
     --tag-bg: var(--surface-elevated);
     --tag-text: var(--text-secondary);
     --tag-border: var(--border-medium);
     --tag-checked-bg: var(--primary-brand);
     --tag-checked-text: var(--text-on-color);
     --tag-checked-border: var(--primary-brand);
}


/* --- Base Styles --- */
body {
    font-family: 'Roboto', sans-serif;
    display: flex;
    flex-direction: column;
    /* Use auto margins to center a fixed-width element, but allow full width on small screens */
    /* margin: 0 auto; */
    /* max-width: 650px; Removed max-width from body */
    min-height: 100vh;
    background-color: var(--background);
    color: var(--text-primary);
    margin: 0; /* Reset default body margin */
    padding: var(--space-md); /* Global padding */
    box-sizing: border-box;
    transition: background-color 0.3s ease, color 0.3s ease;
    line-height: 1.6;
    overflow-y: auto;
    -webkit-font-smoothing: antialiased; /* Improve font rendering */
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility; /* Improve readability */
}

h2 {
     font-size: 1.8em;
     font-weight: 700;
     color: var(--text-primary);
     transition: color 0.3s ease;
}

/* --- Header Toggle Buttons --- */
.mode-toggle {
    position: absolute;
    top: var(--space-md);
    padding: var(--space-sm); /* Use spacing variable */
    background-color: var(--surface); /* Use surface background */
    color: var(--accent-secondary);
    border: 1px solid var(--border-medium); /* Use medium border */
    border-radius: var(--space-sm); /* Slightly rounded corners */
    cursor: pointer;
    font-size: 0.9em;
    font-weight: 500;
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    width: var(--space-xl); /* Fixed size based on spacing */
    height: var(--space-xl);
    z-index: 10;
    outline-offset: 2px;
    box-shadow: var(--shadow-subtle); /* Add subtle shadow */
}

.mode-toggle .mode-icon {
    width: var(--space-md); /* Icon size */
    height: var(--space-md);
}

.mode-toggle:hover:not(:disabled),
.mode-toggle:focus-visible { /* Use focus-visible for better a11y */
    background-color: var(--surface-elevated);
    border-color: var(--primary-brand); /* Highlight border with primary */
    color: var(--primary-brand); /* Highlight icon with primary */
    box-shadow: var(--shadow-medium); /* More prominent shadow on hover/focus */
    outline: none; /* Remove default outline when using focus-visible */
}

/* Style the outline for focus-visible */
.mode-toggle:focus-visible {
    outline: 3px solid var(--primary-brand); /* Primary brand color outline */
}
body.dark-mode .mode-toggle:focus-visible {
     outline-color: var(--primary-brand); /* Same primary brand color outline in dark mode */
}


/* Positioning */
#dark-mode-toggle {
    right: var(--space-md);
}
#reveal-password-button,
#lock-app-button {
    right: calc(var(--space-md) + var(--space-xl) + var(--space-sm)); /* Position to the left of dark mode toggle */
}

/* Control visibility based on .locked class on body */
body.locked #reveal-password-button { display: flex; }
body:not(.locked) #reveal-password-button { display: none; }
body.locked #lock-app-button { display: none; }
body:not(.locked) #lock-app-button { display: flex; }


/* --- Lock Screen --- */
#lock-screen {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--background);
    color: var(--text-primary);
    z-index: 5;
    transition: opacity 0.3s ease;
    padding: var(--space-md);
    box-sizing: border-box;
}

#lock-screen .lock-content {
     text-align: center;
     background-color: var(--surface);
     padding: var(--space-xl); /* Generous padding */
     border-radius: var(--space-md);
     box-shadow: var(--shadow-medium); /* More prominent shadow */
     border: 1px solid var(--border-medium); /* Use medium border */
     max-width: 90%; /* Prevent overflow on small screens */
     width: 400px;
     box-sizing: border-box;
}

#lock-screen h2 {
     margin-top: 0;
     margin-bottom: var(--space-sm); /* Use spacing variable */
     font-size: 2em;
     font-weight: 700;
     color: var(--text-primary);
}
#lock-screen p {
    margin-bottom: var(--space-md); /* Use spacing variable */
    color: var(--text-secondary);
}

#unlock-section {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm); /* Use spacing variable */
    justify-content: center;
    align-items: center;
    margin-top: var(--space-md); /* Use spacing variable */
    width: 100%;
    box-sizing: border-box;
}

#unlock-section input[type="password"] {
    padding: var(--space-sm) var(--space-md); /* Use spacing variables */
    border: 1px solid var(--border-medium);
    border-radius: var(--space-sm);
    font-size: 1em;
    background-color: var(--input-bg);
    color: var(--text-primary);
    width: 100%;
    box-sizing: border-box;
    transition: border-color 0.2s ease, background-color 0.2s ease, color 0.2s ease;
    outline-offset: 2px;
}
#unlock-section input[type="password"]::placeholder {
     color: var(--text-placeholder);
     opacity: 1; /* Ensure placeholder is visible */
}
#unlock-section input[type="password"]:focus {
    border-color: var(--primary-brand);
    outline: none; /* Remove default outline */
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25); /* Add focus ring */
}
body.dark-mode #unlock-section input[type="password"]:focus {
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
}


#unlock-section button {
    padding: var(--space-sm) var(--space-md); /* Use spacing variables */
    background-color: var(--primary-brand);
    color: var(--text-on-color); /* Use text-on-color variable */
    border: none;
    border-radius: var(--space-sm);
    cursor: pointer;
    font-size: 1em;
    font-weight: 500;
    transition: background-color 0.2s ease, opacity 0.2s ease, box-shadow 0.2s ease;
    width: 100%;
    max-width: 200px;
    outline-offset: 2px;
}
#unlock-section button:hover:not(:disabled) {
     background-color: var(--primary-darker);
     box-shadow: var(--shadow-subtle);
}
#unlock-section button:focus-visible { /* Use focus-visible */
    outline: none;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
}
body.dark-mode #unlock-section button:focus-visible {
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.7);
}
#unlock-section button:disabled {
     background-color: var(--disabled-bg);
     color: var(--disabled-text);
     cursor: not-allowed;
     opacity: 0.7;
     box-shadow: none;
}


#unlock-error-message {
    color: var(--color-error);
    margin-top: var(--space-sm);
    font-size: 0.9em;
    text-align: center;
    width: 100%;
    font-weight: 500;
}


/* --- Main App Content --- */
#main-app-content {
    width: 100%;
    max-width: 650px; /* Center content */
    margin: var(--space-xxl) auto var(--space-md) auto; /* Top margin for header space, auto left/right for centering */
    padding: 0; /* Remove padding applied by body on small screens */
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    flex-grow: 1; /* Allow main content to take space */
    position: relative; /* For absolute positioning of views */
}

body.locked #main-app-content {
    display: none;
}
body:not(.locked) #lock-screen {
    display: none;
}


/* --- Container (Main App Wrapper inside #main-app-content) --- */
.container {
    background-color: var(--surface);
    border-radius: var(--space-md);
    box-shadow: var(--shadow-medium);
    width: 100%;
    overflow: hidden; /* Prevents internal absolute views from overflowing rounded corners */
    display: flex;
    flex-direction: column;
    min-height: calc(100vh - var(--space-xxl) - var(--space-md)); /* Adjust min-height based on body padding and header space */
    transition: background-color 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
    border: 1px solid var(--border-light); /* Subtle border */
    position: relative; /* Needed for absolute positioning within */
    flex-grow: 1;
}

body.dark-mode .container {
    box-shadow: var(--shadow-subtle); /* Dark mode might use less harsh shadows */
    border-color: var(--border-medium);
}


/* --- View Transitions (Using display: none for simplicity initially) --- */
.view {
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    overflow-y: auto; /* Allow scrolling within view */
    display: flex;
    flex-direction: column;
    /* Add padding to views */
     padding: var(--space-lg);
     box-sizing: border-box; /* Include padding in height */
}

/* The .hidden utility class handles display: none */
.hidden {
    display: none !important;
}


/* Adjustments for chat view to handle layout - inner flex column will manage sections */
#chat-container.view {
     justify-content: flex-start; /* Content starts from top */
     padding: 0; /* Remove padding here, handled by child elements */
}

/* Persona Selection View */
#persona-selection {
    /* Padding already added to .view */
    text-align: center;
    flex-grow: 1;
    align-items: center;
     overflow-y: auto;
}

#persona-selection h2 {
     margin-bottom: var(--space-xl); /* More space below heading */
     width: 100%; /* Allow heading to take full width */
}


/* --- Persona Filters (MODIFIED for Checkboxes) --- */
#persona-filters {
     margin-bottom: var(--space-md);
     width: 100%;
     max-width: 600px; /* Keep max width for filters */
     text-align: left; /* Align label to the left */
}
#persona-filters > label {
     display: block;
     margin-bottom: var(--space-sm);
     font-weight: 500;
     color: var(--text-secondary);
     font-size: 0.95em;
}
#persona-filters .filter-options {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: var(--space-sm); /* Use spacing variable */
     font-size: 0.95em;
}

#persona-filters input[type="checkbox"] {
    display: none; /* Hide actual checkboxes */
}

/* Style for checkbox labels acting as buttons/tags */
#persona-filters label {
     cursor: pointer;
     padding: var(--space-xs) var(--space-sm); /* Smaller padding for tags */
     border: 1px solid var(--tag-border); /* Use tag border variable */
     border-radius: 20px; /* Pill shape */
     transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease, box-shadow 0.1s ease;
     font-weight: 400;
     white-space: nowrap;
     background-color: var(--tag-bg);
     color: var(--tag-text);
     position: relative; /* For potential future enhancements */
     font-size: 0.85em; /* Smaller font for tags */
      outline-offset: 2px;
}

/* Style for checkbox labels when checked */
#persona-filters input[type="checkbox"]:checked + label {
    background-color: var(--tag-checked-bg);
    color: var(--tag-checked-text);
    border-color: var(--tag-checked-border);
    font-weight: 500;
}

/* Hover/Focus state for labels */
#persona-filters label:hover:not(:disabled),
#persona-filters input[type="checkbox"]:focus-visible + label {
     background-color: var(--surface-elevated); /* Subtle change on hover */
     border-color: var(--border-medium);
     color: var(--text-primary);
     box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.2); /* Subtle focus ring */
}
/* Checked state hover/focus */
#persona-filters input[type="checkbox"]:checked + label:hover:not(:disabled),
#persona-filters input[type="checkbox"]:checked:focus-visible + label {
     background-color: var(--primary-darker);
     border-color: var(--primary-darker);
     box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.4);
}

body.dark-mode #persona-filters label:hover:not(:disabled),
body.dark-mode #persona-filters input[type="checkbox"]:focus-visible + label {
     background-color: var(--surface-subtle);
     border-color: var(--border-light);
     color: var(--text-primary);
     box-shadow: 0 0 0 2px rgba(77, 166, 255, 0.3);
}
body.dark-mode #persona-filters input[type="checkbox"]:checked + label:hover:not(:disabled),
body.dark-mode #persona-filters input[type="checkbox"]:checked:focus-visible + label {
     background-color: var(--primary-brand);
     border-color: var(--primary-brand);
     box-shadow: 0 0 0 2px rgba(77, 166, 255, 0.5);
}


/* --- Search Area --- */
.search-area {
    margin-bottom: var(--space-md);
     width: 100%;
     max-width: 600px;
}
#persona-search {
    padding: var(--space-sm) var(--space-md);
    border: 1px solid var(--border-medium);
    border-radius: var(--space-sm);
    font-size: 1em;
    width: 100%;
    box-sizing: border-box;
    background-color: var(--input-bg);
    color: var(--text-primary);
    transition: border-color 0.2s ease, background-color 0.2s ease, color 0.2s ease;
    outline-offset: 2px;
}
#persona-search::placeholder {
    color: var(--text-placeholder);
}
#persona-search:focus {
    border-color: var(--primary-brand);
    outline: none;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
}
body.dark-mode #persona-search:focus {
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
}

/* --- Persona Grid --- */
#persona-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr)); /* Adjusted minmax */
    gap: var(--space-md); /* Use spacing variable */
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    padding-bottom: var(--space-lg); /* Add padding below grid */
}

/* --- Persona Cards --- */
.persona-card {
    background-color: var(--surface);
    border: 1px solid var(--border-light);
    border-radius: var(--space-sm); /* Use spacing variable */
    padding: var(--space-md); /* Use spacing variable */
    text-align: center;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease, border-color 0.2s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 120px; /* Slightly increased min-height */
    color: var(--text-primary);
    font-family: 'Roboto', sans-serif;
    -webkit-tap-highlight-color: transparent;
    outline-offset: 2px;
    box-shadow: var(--shadow-subtle); /* Add subtle shadow */
    border-left: 4px solid transparent; /* Add a colored highlight bar */
}

/* Highlight bar on hover/focus */
.persona-card:hover:not(:disabled),
.persona-card:focus-visible { /* Use focus-visible */
    transform: translateY(-3px); /* Subtle lift */
    box-shadow: var(--shadow-medium); /* More prominent shadow */
    border-color: var(--primary-brand); /* Highlight border with primary */
    border-left-color: var(--primary-brand); /* Activate highlight bar */
     outline: none; /* Remove default outline */
}
.persona-card:focus-visible {
     outline: 3px solid var(--primary-brand); /* Add focus ring */
}
body.dark-mode .persona-card:focus-visible {
     outline-color: var(--primary-brand);
}


.persona-card:active:not(:disabled) {
     transform: translateY(-1px); /* Slight press effect */
     box-shadow: var(--shadow-subtle);
}

.persona-card h3 {
    margin-top: 0;
    margin-bottom: var(--space-xs); /* Use spacing variable */
    font-size: 1.1em;
    font-weight: 700;
    color: var(--text-primary);
    word-break: break-word;
     line-height: 1.3;
}

.persona-tags {
    font-size: 0.75em;
    color: var(--text-secondary);
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--space-xs); /* Use spacing variable */
    margin-top: var(--space-xs); /* Use spacing variable */
}

.persona-tags .tag {
    background-color: var(--tag-bg);
    padding: 2px var(--space-sm); /* Smaller padding */
    border-radius: 12px;
    color: var(--tag-text);
    font-weight: 500;
}

/* Style for the empty grid message */
.empty-grid-message {
    text-align: center;
    color: var(--text-secondary);
    font-style: italic;
    grid-column: 1 / -1; /* Span across all columns */
    padding: var(--space-xxl) var(--space-md); /* Generous padding */
}


/* --- Chat Container & Header --- */
#chat-container {
     /* Padding is handled by child elements */
     flex-grow: 1;
     justify-content: space-between; /* Distribute space vertically */
     overflow: hidden; /* Prevent chatbox scrolling indicator from appearing outside */
}

#chat-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-sm) var(--space-md); /* Use spacing variables */
    background-color: var(--surface);
    border-bottom: 1px solid var(--border-light);
    font-weight: 700;
    color: var(--text-primary);
    transition: background-color 0.3s ease, border-bottom-color 0.3s ease, color 0.3s ease;
    font-size: 1.1em;
    flex-shrink: 0; /* Prevent header from shrinking */
     border-top-left-radius: var(--space-md); /* Match container radius */
     border-top-right-radius: var(--space-md); /* Match container radius */
}

#chat-header span#current-persona {
    flex-grow: 1;
    text-align: center;
    margin: 0 var(--space-sm); /* Use spacing variable */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-weight: 700;
    font-size: 1.2em; /* Slightly larger persona name */
}

#chat-header button {
    background: none;
    border: none;
    color: var(--accent-secondary);
    cursor: pointer;
    font-size: 0.9em; /* Fallback font size */
    padding: var(--space-xs); /* Smaller padding for icon buttons */
    border-radius: var(--space-xs); /* Small border radius */
    transition: color 0.2s ease, background-color 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    width: var(--space-xl); /* Fixed size */
    height: var(--space-xl);
    outline-offset: 2px;
}
#chat-header button svg {
     width: var(--space-md);
     height: var(--space-md);
}

#chat-header button:hover:not(:disabled),
#chat-header button:focus-visible { /* Use focus-visible */
    color: var(--primary-brand);
    background-color: var(--surface-elevated); /* Subtle background change */
     outline: none;
}
#chat-header button:focus-visible {
     outline: 3px solid rgba(0, 123, 255, 0.2); /* Subtle focus ring */
}
body.dark-mode #chat-header button:focus-visible {
     outline-color: rgba(77, 166, 255, 0.3);
}


/* --- Chatbox (Messages Area) --- */
#chatbox {
    flex-grow: 1;
    overflow-y: auto;
    padding: var(--space-md); /* Use spacing variable */
    display: flex;
    flex-direction: column;
    background-color: var(--surface);
    transition: background-color 0.3s ease;
    min-height: 0; /* Allows chatbox to shrink and allow scrolling */
    /* Custom scrollbar (optional) */
    scrollbar-width: thin; /* Firefox */
    scrollbar-color: var(--border-medium) var(--surface-elevated); /* Firefox */
}

/* Custom scrollbar for Webkit browsers */
#chatbox::-webkit-scrollbar {
    width: 8px;
}
#chatbox::-webkit-scrollbar-track {
    background: var(--surface-elevated);
    border-radius: 10px;
}
#chatbox::-webkit-scrollbar-thumb {
    background-color: var(--border-medium);
    border-radius: 10px;
    border: 2px solid var(--surface-elevated);
}
body.dark-mode #chatbox::-webkit-scrollbar-track {
    background: var(--surface);
}
body.dark-mode #chatbox::-webkit-scrollbar-thumb {
    background-color: var(--border-light);
    border: 2px solid var(--surface);
}


.message {
    margin-bottom: var(--space-sm); /* Use spacing variable */
    padding: var(--space-sm) var(--space-md); /* Use spacing variables */
    border-radius: 20px; /* Pill shape for messages */
    max-width: 85%;
    word-wrap: break-word;
    line-height: 1.5;
    font-size: 1em;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1); /* Softer shadow */
    transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
}

.user-message {
    align-self: flex-end;
    background-color: var(--user-message-bg);
    color: var(--text-on-color);
    border-bottom-right-radius: var(--space-xs); /* Pointed corner effect */
    margin-right: 0;
    margin-left: var(--space-sm); /* Use spacing */
}

.bot-message {
    align-self: flex-start;
    background-color: var(--bot-message-bg);
    color: var(--text-primary);
    border-bottom-left-radius: var(--space-xs); /* Pointed corner effect */
    transition: background-color 0.3s ease, color 0.3s ease;
    margin-left: 0;
    margin-right: var(--space-sm); /* Use spacing */
}

/* Style for the initial instruction message */
.message.bot-message.initial-message {
    margin-top: auto; /* Push to the bottom if chatbox is large */
    margin-bottom: var(--space-lg); /* More space below */
    align-self: center;
    text-align: center;
    font-style: italic;
    color: var(--text-secondary);
    background-color: transparent;
    padding: 0;
    border-radius: 0;
    font-size: 0.9em;
    box-shadow: none;
    max-width: 95%; /* Allow it to be wider */
}


/* --- Input Area --- */
#input-area {
    display: flex;
    padding: var(--space-sm) var(--space-md); /* Use spacing variables */
    border-top: 1px solid var(--border-light);
    background-color: var(--surface);
    gap: var(--space-sm); /* Use spacing variable */
    transition: background-color 0.3s ease, border-top-color 0.3s ease;
    flex-shrink: 0;
    border-bottom-left-radius: var(--space-md); /* Match container radius */
    border-bottom-right-radius: var(--space-md); /* Match container radius */
}

#user-input {
    flex-grow: 1;
    padding: var(--space-sm) var(--space-md); /* Use spacing variables */
    border: 1px solid var(--border-medium);
    border-radius: var(--space-sm);
    font-size: 1em;
    box-sizing: border-box;
    background-color: var(--input-bg);
    color: var(--text-primary);
    transition: border-color 0.2s ease, background-color 0.2s ease, color 0.2s ease;
    outline-offset: 2px;
     resize: none; /* Prevent manual resizing */
     min-height: 40px; /* Ensure minimum height */
     max-height: 150px; /* Prevent input from becoming too large */
     overflow-y: auto; /* Add scroll if text exceeds max-height */
     /* Custom scrollbar for textarea (optional) */
     scrollbar-width: thin;
     scrollbar-color: var(--border-medium) var(--input-bg);
}
#user-input::-webkit-scrollbar { width: 8px; }
#user-input::-webkit-scrollbar-track { background: var(--input-bg); border-radius: 10px; }
#user-input::-webkit-scrollbar-thumb {
    background-color: var(--border-medium);
    border-radius: 10px;
    border: 2px solid var(--input-bg);
}
body.dark-mode #user-input::-webkit-scrollbar-track { background: var(--surface-subtle); }
body.dark-mode #user-input::-webkit-scrollbar-thumb {
    background-color: var(--border-light);
    border: 2px solid var(--surface-subtle);
}


#user-input::placeholder {
    color: var(--text-placeholder);
}
#user-input:focus {
     border-color: var(--primary-brand);
     outline: none;
     box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
}
body.dark-mode #user-input:focus {
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
}


#send-button {
    padding: var(--space-sm) var(--space-md); /* Use spacing variables */
    background-color: var(--accent-action);
    color: var(--text-on-color);
    border: none;
    border-radius: var(--space-sm);
    cursor: pointer;
    font-size: 1em;
    font-weight: 500;
    transition: background-color 0.2s ease, opacity 0.2s ease, box-shadow 0.2s ease;
    outline-offset: 2px;
    flex-shrink: 0; /* Prevent button from shrinking */
     min-width: 80px; /* Ensure minimum width */
}

#send-button:hover:not(:disabled) {
     background-color: var(--accent-action-darker);
     opacity: 1;
     box-shadow: var(--shadow-subtle);
}
#send-button:focus-visible { /* Use focus-visible */
     outline: none;
     box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.4);
}
body.dark-mode #send-button:focus-visible {
     box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.6);
}
#send-button:disabled {
    background-color: var(--disabled-bg);
    color: var(--disabled-text);
    cursor: not-allowed;
    opacity: 0.7;
     box-shadow: none;
}


/* --- Utility/Helper Classes --- */
.hidden {
    display: none !important;
}

.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* CSS for Typing Indicator Dots */
@keyframes blink {
  0% { opacity: .2; }
  20% { opacity: 1; }
  100% { opacity: .2; }
}

.message.bot-message.typing {
    background-color: var(--bot-message-bg);
    color: var(--text-primary); /* Use text color */
    font-size: 1.2em;
    width: auto;
    padding: var(--space-sm) var(--space-md);
    border-bottom-left-radius: var(--space-xs);
    box-shadow: none;
    display: inline-block; /* Or flex/grid if needed for dot layout */
    align-items: center; /* If using flex/grid */
    justify-content: center; /* If using flex/grid */
    line-height: 1; /* Tighter line height for dots */
}

.message.bot-message.typing .dot {
  animation: blink 1.4s infinite steps(1); /* Use steps for discrete blinking */
  animation-fill-mode: both;
  color: var(--text-secondary); /* Use secondary text color for dots */
  display: inline-block; /* Ensure dots are inline */
   width: 6px; /* Give dots a size */
   height: 6px;
   margin: 0 1px; /* Space between dots */
   background-color: currentColor; /* Use current text color for background */
   border-radius: 50%; /* Make them round */
   vertical-align: middle; /* Align dots nicely */
}

.message.bot-message.typing .dot:nth-child(1) { /* Corrected index for first dot */
  animation-delay: .0s; /* Start immediately */
}
.message.bot-message.typing .dot:nth-child(2) {
  animation-delay: .2s;
}
.message.bot-message.typing .dot:nth-child(3) {
  animation-delay: .4s;
}


/* --- Responsive adjustments --- */
@media (max-width: 600px) {
    body {
        padding: var(--space-md); /* Keep some padding */
        align-items: stretch;
        overflow-y: auto;
    }
     h2 {
         font-size: 1.5em; /* Smaller headings on small screens */
     }

     /* Header Toggle Buttons */
     .mode-toggle {
         top: var(--space-sm); /* Position closer to top edge */
         width: var(--space-xl);
         height: var(--space-xl);
         padding: var(--space-xs);
     }
    #dark-mode-toggle {
        right: var(--space-sm);
    }
     #reveal-password-button,
     #lock-app-button {
         right: calc(var(--space-sm) + var(--space-xl) + var(--space-xs)); /* Adjust position based on new spacing */
     }
     .mode-toggle .mode-icon {
          width: var(--space-md);
          height: var(--space-md);
     }


    /* Lock Screen Adjustments */
     #lock-screen .lock-content {
         padding: var(--space-md);
         width: 100%;
         max-width: none; /* Allow full width */
     }
     #lock-screen h2 {
         font-size: 1.5em;
         margin-bottom: var(--space-sm);
     }
     #lock-screen p {
          margin-bottom: var(--space-md);
     }
      #unlock-section {
         gap: var(--space-sm);
      }
      #unlock-section input[type="password"] {
          max-width: none;
      }
     #unlock-section button {
         width: 100%;
         max-width: none;
     }
     #unlock-error-message {
          margin-top: var(--space-sm);
          font-size: 0.85em;
     }


     /* Main App Content & Container */
     #main-app-content {
         margin-top: var(--space-xxl); /* Keep space from header */
          padding: 0; /* Remove horizontal padding here */
          align-items: stretch;
     }
     .container {
         border-radius: 0; /* Remove border radius on small screens */
         box-shadow: none; /* Remove shadow on small screens */
         border: none; /* Remove border on small screens */
         min-height: calc(100vh - var(--space-xxl) - var(--space-md)); /* Adjust min-height */
         margin-top: 0; /* No margin here */
     }


    .view {
        padding: var(--space-md); /* Adjust view padding */
    }

    #persona-selection {
        padding: var(--space-md);
    }
     #persona-selection h2 {
         font-size: 1.5em;
         margin-bottom: var(--space-md);
     }
    #persona-filters {
         margin-bottom: var(--space-sm); /* Reduced space */
    }
      #persona-filters .filter-options {
          gap: var(--space-xs); /* Reduced gap */
          justify-content: center; /* Center filters */
      }
     #persona-filters label {
          padding: 6px 12px; /* Adjusted tag padding */
          font-size: 0.8em; /* Smaller font for tags */
     }
    .search-area {
         margin-bottom: var(--space-md);
    }

     #persona-grid {
         grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); /* Smaller grid items */
         gap: var(--space-sm); /* Reduced gap */
          padding-bottom: var(--space-md); /* Reduced padding */
     }
     .persona-card {
         padding: var(--space-sm); /* Reduced padding */
         min-height: 100px; /* Adjusted min-height */
         border-left-width: 3px; /* Thinner highlight bar */
     }
      .persona-card h3 {
         font-size: 0.95em; /* Smaller heading font */
          margin-bottom: var(--space-xs);
      }
     .persona-tags {
         font-size: 0.65em; /* Even smaller font for tags */
          gap: 3px;
     }


     #chat-header {
         padding: var(--space-xs) var(--space-sm); /* Reduced padding */
         font-size: 1em;
         border-top-left-radius: 0; /* Remove radius on small screens */
         border-top-right-radius: 0;
     }
     #chat-header button {
         padding: var(--space-xs);
         width: var(--space-lg); /* Slightly smaller size */
         height: var(--space-lg);
     }
     #chat-header button svg {
          width: var(--space-sm); /* Smaller icon size */
          height: var(--space-sm);
     }
     #chat-header span#current-persona {
          font-size: 1.1em; /* Slightly smaller persona name */
     }


     #chatbox {
         padding: var(--space-md) var(--space-sm); /* Adjust padding */
         padding-bottom: var(--space-sm);
     }
     .message {
         max-width: 98%; /* Allow wider messages */
         margin-bottom: var(--space-sm);
         padding: var(--space-sm) var(--space-md);
         font-size: 0.95em;
     }
     .message.bot-message.initial-message {
          margin-bottom: var(--space-md);
          padding: 0 var(--space-xs);
     }


     #input-area {
        padding: var(--space-sm); /* Reduced padding */
         gap: var(--space-xs);
         border-bottom-left-radius: 0; /* Remove radius on small screens */
         border-bottom-right-radius: 0;
     }
     #user-input {
         padding: var(--space-sm) var(--space-md);
         font-size: 0.95em;
     }
    #send-button {
        padding: var(--space-sm) var(--space-md);
         font-size: 0.95em;
         min-width: auto; /* Allow button to shrink */
    }
}